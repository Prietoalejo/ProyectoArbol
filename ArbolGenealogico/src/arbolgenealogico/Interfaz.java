/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package arbolgenealogico;
import javax.swing.JOptionPane;
import edd.Tree;
import edd.NodoLista;
import com.google.gson.JsonArray; 
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;

/**
 * @author Massimo Gramcko
 * @author Alejandro Prieto
 * @author Edgar Téran
 */
public class Interfaz extends javax.swing.JFrame {
    
    private Tree tree; //Arbol para el programa
    int xMouse, yMouse;
    private ImageIcon imagen;
    private Icon icono;

    public Interfaz() {
        initComponents();
        tab1.setBackground(new Color(38, 166, 154));
        Panel_2.setVisible(false);
        Panel_3.setVisible(false);
        Panel_4.setVisible(false);
        Panel_5.setVisible(false);
        Panel_6.setVisible(false);
        this.setLocationRelativeTo(this);
        tree = new Tree();

        this.pintarImagen(this.Img_1, "src/Img/BannerMedieval.png");
        this.pintarImagen(this.Img_2, "src/Img/herencia.gif");
        this.pintarImagen(this.Img_3, "src/Img/Unimet.png");
        this.pintarImagen(this.Img_4, "src/Img/Arbol_Linaje.jpg");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    private String extraerValor(String clave, String texto) {
        int inicio = texto.indexOf(clave);
        if (inicio == -1) return null;

        inicio += clave.length() + 2;
        int fin = texto.indexOf(",", inicio);
        if (fin == -1) fin = texto.indexOf("}", inicio);

    return texto.substring(inicio, fin).replace("\"", "").trim();
}

    private String[] extraerLista(String clave, String texto) {
        int inicio = texto.indexOf(clave);
        if (inicio == -1) return new String[0];
        inicio += clave.length() + 2;
        int fin = texto.indexOf("]", inicio);

        String lista = texto.substring(inicio, fin).replace("\"", "").trim();
        return lista.split(",");
}

    
    private void procesarMiembro(String miembro, Tree tree) {
        String nombre = extraerValor(":", miembro);
        String mote = extraerValor("Known throughout as", miembro);
        String titulo = extraerValor("Held title", miembro);
        String colorOjos = extraerValor("Of eyes", miembro);
        String colorCabello = extraerValor("Of hair", miembro);
        String notas = extraerValor("Notes", miembro);
        String destino = extraerValor("Fate", miembro);

        String padre = extraerValor("Born to", miembro);
        String madre = extraerValor("Born to", miembro); 
        String[] hijos = extraerLista("Father to", miembro);

        NodoLista nodo = new NodoLista(nombre, tree.getKeyCounter(), mote);
        nodo.setHeldTitle(titulo);
        nodo.setEyeColor(colorOjos);
        nodo.setHairColor(colorCabello);
        nodo.setNotes(notas);
        nodo.setFate(destino);

        tree.getHt().insertWithValue(nodo);

        NodoLista nodoPadre = padre != null ? tree.getHt().gettNodeById(padre) : null;
        NodoLista nodoMadre = madre != null ? tree.getHt().gettNodeById(madre) : null;

        if (nodoPadre != null) {
            nodo.setParent(nodoPadre);
            tree.increaseSons(nodoPadre, nodo);
        }
        if (nodoMadre != null) {
            nodo.setMother(nodoMadre);
        }

        for (String hijo : hijos) {
            NodoLista nodoHijo = tree.getHt().gettNodeById(hijo);
            if (nodoHijo != null) {
                tree.increaseSons(nodo, nodoHijo);
            }
        }

        if (tree.isEmpty()) {
            tree.setRoot(nodo);
        }
}

    
    private void procesarCasa(String casa, Tree tree) {
        String[] miembros = casa.split("],\\[");
        for (String miembro : miembros) {
            procesarMiembro(miembro, tree);
        }
}

    
    private void procesarJson(String contenido, Tree tree) {
        contenido = contenido.replace("\n", "").replace("\r", "").replace("\t", "").trim();
        String[] casas = contenido.split("},\\{");
        for (String casa : casas) {
            procesarCasa(casa, tree);
        }
    }
    
    private void insertarNodos(JsonObject casas, Tree tree) {
        for (String nombreCasa : casas.keySet()) {
            JsonArray miembros = casas.getAsJsonArray(nombreCasa);
            for (JsonElement miembro : miembros) {
                if (miembro.isJsonObject()) {
                    JsonObject miembroLinaje = miembro.getAsJsonObject();
                    for (String nombreMiembro : miembroLinaje.keySet()) {
                        JsonArray atributos = miembroLinaje.getAsJsonArray(nombreMiembro);

                        // Generar una clave única usando múltiples atributos
                        String mote = extraerValor("Known throughout as", atributos);
                        String heldTitle = extraerValor("Held title", atributos);
                        String claveUnica = normalizarNombre(nombreMiembro + 
                            (mote != null ? " (" + mote + ")" : "") + 
                            (heldTitle != null ? " [" + heldTitle + "]" : ""));

                        // Crear e insertar nodo
                        NodoLista nodo = new NodoLista(claveUnica, tree.getKeyCounter(), mote);
                        tree.getHt().insertWithValue(nodo);

                        // Imprime el nodo insertado y su índice
                        System.out.println("Nodo insertado: " + claveUnica + " en índice: " + tree.getHt().hashFunc(claveUnica));
                    }
                }
            }
        }
    }

    
    

    public String normalizarNombre(String nombre) {
    if (nombre == null) return null;
    return nombre.trim().replaceAll("\\s+", " ").toLowerCase();
}

    
    public static String simplifyName(String name) {
        if (name == null) return null;
        return name.split(",")[0].trim();
    }


    private String extraerValor(String clave, JsonArray atributos) {
        for (JsonElement atributo : atributos) {
            if (atributo.isJsonObject()) {
                JsonObject obj = atributo.getAsJsonObject();
                if (obj.has(clave)) {
                    return obj.get(clave).getAsString().trim();
                }
            }
        }
        return null;
    }
    private String[] extraerLista(String clave, JsonArray atributos) {
        for (JsonElement atributo : atributos) {
            if (atributo.isJsonObject()) {
                JsonObject obj = atributo.getAsJsonObject();
                if (obj.has(clave)) {
                    JsonArray array = obj.getAsJsonArray(clave);
                    String[] resultado = new String[array.size()];
                    for (int i = 0; i < array.size(); i++) {
                        resultado[i] = normalizarNombre(array.get(i).getAsString());
                    }
                    return resultado;
                }
            }
        }
        return new String[0];
    }


    private void procesarRelaciones(JsonObject casas, Tree tree) {
        for (String nombreCasa : casas.keySet()) {
            JsonArray miembros = casas.getAsJsonArray(nombreCasa);
            for (JsonElement miembro : miembros) {
                if (miembro.isJsonObject()) {
                    JsonObject miembroLinaje = miembro.getAsJsonObject();
                    for (String nombreMiembro : miembroLinaje.keySet()) {
                        JsonArray atributos = miembroLinaje.getAsJsonArray(nombreMiembro);

                        // Normalizar nombre del nodo actual
                        String mote = extraerValor("Known throughout as", atributos);
                        String heldTitle = extraerValor("Held title", atributos);
                        String claveUnica = normalizarNombre(nombreMiembro + 
                            (mote != null ? " (" + mote + ")" : "") + 
                            (heldTitle != null ? " [" + heldTitle + "]" : ""));
                        System.out.println("Procesando nodo: " + claveUnica);
                        NodoLista nodo = tree.getHt().gettNodeById(claveUnica);

                        if (nodo != null) {
                            // Procesar padres
                            String padre = extraerValor("Born to", atributos);
                            System.out.println("Padre encontrado: " + padre);
                            if (padre != null && !"[Unknown]".equals(padre)) {
                                padre = normalizarNombre(padre);
                                NodoLista nodoPadre = tree.getHt().gettNodeById(padre);
                                System.out.println("Clave normalizada para padre: "+ padre);
                                if (nodoPadre != null) {
                                    nodo.setParent(nodoPadre);
                                    tree.increaseSons(nodoPadre, nodo);
                                    System.out.println("Relación padre-hijo: " + padre + " -> " + nodo.getNombre());
                                } else {
                                    System.out.println("Advertencia: Padre no encontrado: " + padre + " (Índice esperado: " + tree.getHt().hashFunc(padre) + ")");
                                }
                            }

                            // Procesar hijos
                            String[] hijos = extraerLista("Father to", atributos);
                            for (String hijo : hijos) {
                                hijo = normalizarNombre(hijo);
                                NodoLista nodoHijo = tree.getHt().gettNodeById(hijo);
                                if (nodoHijo != null) {
                                    tree.increaseSons(nodo, nodoHijo);
                                    System.out.println("Relación hijo-padre: " + nodo.getNombre() + " -> " + hijo);
                                } else {
                                    System.out.println("Advertencia: Hijo no encontrado: " + hijo + " (Índice esperado: " + tree.getHt().hashFunc(hijo) + ")");
                                }
                            }
                        } else {
                            System.out.println("ERROR: Nodo no encontrado para: " + claveUnica);
                        }
                    }
                }
            }
        }
    }

    private void imprimirTablaHash(Tree tree) {
        System.out.println("\nEstado de la tabla hash:");
        tree.getHt().show();
    }
    
    private boolean cargarArbolDesdeJson(String contenido, Tree tree) {
    try {
        // Eliminar espacios y validar contenido
        contenido = contenido.replace("\n", "").replace("\r", "").replace("\t", "").trim();
        if (contenido.isEmpty()) {
            System.out.println("El archivo JSON está vacío.");
            return false;
        }

        // Parsear el JSON
        JsonParser parser = new JsonParser();
        JsonElement element = parser.parse(contenido);
        JsonObject casas = element.getAsJsonObject();

        // Fase 1: Insertar nodos
        insertarNodos(casas, tree);
        System.out.println("Nodos insertados correctamente.");

        // Fase 2: Procesar relaciones
        procesarRelaciones(casas, tree);
        System.out.println("Relaciones procesadas correctamente.");

        // Verificar si el árbol tiene al menos un nodo
        if (tree.isEmpty()) {
            System.out.println("El árbol está vacío después de procesar.");
            return false;
        }

        // Imprimir estado final del árbol (opcional)
        this.imprimirTablaHash(tree);

        return true;
    } catch (Exception e) {
        System.out.println("Error al cargar el árbol desde JSON: " + e.getMessage());
        return false;
    }
}



    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PnlMenu = new javax.swing.JPanel();
        tab1 = new javax.swing.JPanel();
        TexHome = new javax.swing.JLabel();
        tab2 = new javax.swing.JPanel();
        TexService = new javax.swing.JLabel();
        tab3 = new javax.swing.JPanel();
        TexAbout = new javax.swing.JLabel();
        TextoTitulo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        tab4 = new javax.swing.JPanel();
        TexAbout1 = new javax.swing.JLabel();
        tab5 = new javax.swing.JPanel();
        TexAbout2 = new javax.swing.JLabel();
        tab6 = new javax.swing.JPanel();
        TexAbout3 = new javax.swing.JLabel();
        Img_3 = new javax.swing.JLabel();
        PnlFondo = new javax.swing.JPanel();
        Panel_1 = new javax.swing.JPanel();
        Cargar_Arbol = new javax.swing.JButton();
        Img_1 = new javax.swing.JLabel();
        Img_2 = new javax.swing.JLabel();
        Panel_2 = new javax.swing.JPanel();
        Img_4 = new javax.swing.JLabel();
        Panel_3 = new javax.swing.JPanel();
        Panel_4 = new javax.swing.JPanel();
        Panel_5 = new javax.swing.JPanel();
        Panel_6 = new javax.swing.JPanel();
        BarraArriba = new javax.swing.JPanel();
        BtnSalida = new javax.swing.JPanel();
        Label_Salida = new javax.swing.JLabel();
        BarraAbajo = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PnlMenu.setBackground(new java.awt.Color(102, 102, 102));
        PnlMenu.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                PnlMenuMouseDragged(evt);
            }
        });
        PnlMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PnlMenuMousePressed(evt);
            }
        });

        tab1.setBackground(new java.awt.Color(38, 166, 154));
        tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab1MouseClicked(evt);
            }
        });

        TexHome.setBackground(new java.awt.Color(38, 166, 154));
        TexHome.setFont(new java.awt.Font("Monotype Corsiva", 1, 20)); // NOI18N
        TexHome.setForeground(new java.awt.Color(255, 255, 255));
        TexHome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TexHome.setText("Home");

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(TexHome, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TexHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab2.setBackground(new java.awt.Color(38, 166, 154));
        tab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab2MouseClicked(evt);
            }
        });

        TexService.setFont(new java.awt.Font("Monotype Corsiva", 1, 20)); // NOI18N
        TexService.setForeground(new java.awt.Color(255, 255, 255));
        TexService.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TexService.setText("Ver Registro");

        javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
        tab2.setLayout(tab2Layout);
        tab2Layout.setHorizontalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TexService, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        tab2Layout.setVerticalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TexService)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab3.setBackground(new java.awt.Color(38, 166, 154));
        tab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab3MouseClicked(evt);
            }
        });

        TexAbout.setFont(new java.awt.Font("Monotype Corsiva", 1, 20)); // NOI18N
        TexAbout.setForeground(new java.awt.Color(255, 255, 255));
        TexAbout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TexAbout.setText("Buscar Nombre");

        javax.swing.GroupLayout tab3Layout = new javax.swing.GroupLayout(tab3);
        tab3.setLayout(tab3Layout);
        tab3Layout.setHorizontalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TexAbout, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        tab3Layout.setVerticalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TexAbout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        TextoTitulo.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        TextoTitulo.setForeground(new java.awt.Color(0, 204, 204));
        TextoTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextoTitulo.setText("Árbol Genealógico");

        jLabel1.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registro de Linajes");

        tab4.setBackground(new java.awt.Color(38, 166, 154));
        tab4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab4MouseClicked(evt);
            }
        });

        TexAbout1.setFont(new java.awt.Font("Monotype Corsiva", 1, 20)); // NOI18N
        TexAbout1.setForeground(new java.awt.Color(255, 255, 255));
        TexAbout1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TexAbout1.setText("Antepasados");

        javax.swing.GroupLayout tab4Layout = new javax.swing.GroupLayout(tab4);
        tab4.setLayout(tab4Layout);
        tab4Layout.setHorizontalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TexAbout1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        tab4Layout.setVerticalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TexAbout1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab5.setBackground(new java.awt.Color(38, 166, 154));
        tab5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab5MouseClicked(evt);
            }
        });

        TexAbout2.setFont(new java.awt.Font("Monotype Corsiva", 1, 20)); // NOI18N
        TexAbout2.setForeground(new java.awt.Color(255, 255, 255));
        TexAbout2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TexAbout2.setText("Titulo");

        javax.swing.GroupLayout tab5Layout = new javax.swing.GroupLayout(tab5);
        tab5.setLayout(tab5Layout);
        tab5Layout.setHorizontalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TexAbout2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        tab5Layout.setVerticalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TexAbout2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab6.setBackground(new java.awt.Color(38, 166, 154));
        tab6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab6MouseClicked(evt);
            }
        });

        TexAbout3.setFont(new java.awt.Font("Monotype Corsiva", 1, 20)); // NOI18N
        TexAbout3.setForeground(new java.awt.Color(255, 255, 255));
        TexAbout3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TexAbout3.setText("Integrantes");

        javax.swing.GroupLayout tab6Layout = new javax.swing.GroupLayout(tab6);
        tab6.setLayout(tab6Layout);
        tab6Layout.setHorizontalGroup(
            tab6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TexAbout3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        tab6Layout.setVerticalGroup(
            tab6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TexAbout3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PnlMenuLayout = new javax.swing.GroupLayout(PnlMenu);
        PnlMenu.setLayout(PnlMenuLayout);
        PnlMenuLayout.setHorizontalGroup(
            PnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tab3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PnlMenuLayout.createSequentialGroup()
                .addGroup(PnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlMenuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextoTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(PnlMenuLayout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 8, Short.MAX_VALUE))))
                    .addGroup(PnlMenuLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(tab4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tab5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tab6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Img_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PnlMenuLayout.setVerticalGroup(
            PnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlMenuLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(TextoTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Img_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PnlFondo.setBackground(new java.awt.Color(38, 166, 154));

        Panel_1.setBackground(new java.awt.Color(255, 255, 255));
        Panel_1.setPreferredSize(new java.awt.Dimension(560, 427));

        Cargar_Arbol.setBackground(new java.awt.Color(38, 166, 154));
        Cargar_Arbol.setFont(new java.awt.Font("Monotype Corsiva", 1, 16)); // NOI18N
        Cargar_Arbol.setForeground(new java.awt.Color(255, 255, 255));
        Cargar_Arbol.setText("Cargar Árbol");
        Cargar_Arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Cargar_ArbolMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Cargar_ArbolMouseExited(evt);
            }
        });
        Cargar_Arbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cargar_ArbolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_1Layout = new javax.swing.GroupLayout(Panel_1);
        Panel_1.setLayout(Panel_1Layout);
        Panel_1Layout.setHorizontalGroup(
            Panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Img_1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(Panel_1Layout.createSequentialGroup()
                .addGroup(Panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_1Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(Img_2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_1Layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(Cargar_Arbol, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel_1Layout.setVerticalGroup(
            Panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_1Layout.createSequentialGroup()
                .addComponent(Img_1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(Img_2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(Cargar_Arbol, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        Panel_2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel_2Layout = new javax.swing.GroupLayout(Panel_2);
        Panel_2.setLayout(Panel_2Layout);
        Panel_2Layout.setHorizontalGroup(
            Panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_2Layout.createSequentialGroup()
                .addContainerGap(262, Short.MAX_VALUE)
                .addComponent(Img_4, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        Panel_2Layout.setVerticalGroup(
            Panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Img_4, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                .addContainerGap())
        );

        Panel_3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel_3Layout = new javax.swing.GroupLayout(Panel_3);
        Panel_3.setLayout(Panel_3Layout);
        Panel_3Layout.setHorizontalGroup(
            Panel_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        Panel_3Layout.setVerticalGroup(
            Panel_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        Panel_4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel_4Layout = new javax.swing.GroupLayout(Panel_4);
        Panel_4.setLayout(Panel_4Layout);
        Panel_4Layout.setHorizontalGroup(
            Panel_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        Panel_4Layout.setVerticalGroup(
            Panel_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        Panel_5.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel_5Layout = new javax.swing.GroupLayout(Panel_5);
        Panel_5.setLayout(Panel_5Layout);
        Panel_5Layout.setHorizontalGroup(
            Panel_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        Panel_5Layout.setVerticalGroup(
            Panel_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        Panel_6.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel_6Layout = new javax.swing.GroupLayout(Panel_6);
        Panel_6.setLayout(Panel_6Layout);
        Panel_6Layout.setHorizontalGroup(
            Panel_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        Panel_6Layout.setVerticalGroup(
            Panel_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        BarraArriba.setBackground(new java.awt.Color(102, 102, 102));

        BtnSalida.setBackground(new java.awt.Color(38, 166, 154));

        Label_Salida.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        Label_Salida.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_Salida.setText("X");
        Label_Salida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_SalidaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Label_SalidaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Label_SalidaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout BtnSalidaLayout = new javax.swing.GroupLayout(BtnSalida);
        BtnSalida.setLayout(BtnSalidaLayout);
        BtnSalidaLayout.setHorizontalGroup(
            BtnSalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BtnSalidaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Label_Salida, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        BtnSalidaLayout.setVerticalGroup(
            BtnSalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Label_Salida, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout BarraArribaLayout = new javax.swing.GroupLayout(BarraArriba);
        BarraArriba.setLayout(BarraArribaLayout);
        BarraArribaLayout.setHorizontalGroup(
            BarraArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BarraArribaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        BarraArribaLayout.setVerticalGroup(
            BarraArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtnSalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        BarraAbajo.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout BarraAbajoLayout = new javax.swing.GroupLayout(BarraAbajo);
        BarraAbajo.setLayout(BarraAbajoLayout);
        BarraAbajoLayout.setHorizontalGroup(
            BarraAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        BarraAbajoLayout.setVerticalGroup(
            BarraAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PnlFondoLayout = new javax.swing.GroupLayout(PnlFondo);
        PnlFondo.setLayout(PnlFondoLayout);
        PnlFondoLayout.setHorizontalGroup(
            PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BarraArriba, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PnlFondoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(Panel_1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
            .addComponent(BarraAbajo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(Panel_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(21, 21, 21)))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(Panel_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(21, 21, 21)))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(Panel_4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(21, 21, 21)))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(Panel_5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(21, 21, 21)))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(Panel_6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(21, 21, 21)))
        );
        PnlFondoLayout.setVerticalGroup(
            PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlFondoLayout.createSequentialGroup()
                .addComponent(BarraArriba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(Panel_1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(BarraAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(Panel_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(54, 54, 54)))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(Panel_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(54, 54, 54)))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(Panel_4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(54, 54, 54)))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(Panel_5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(54, 54, 54)))
            .addGroup(PnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlFondoLayout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(Panel_6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(54, 54, 54)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PnlFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PnlFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseClicked
        Panel_1.setVisible(true);
        Panel_2.setVisible(false);
        Panel_3.setVisible(false);
        Panel_4.setVisible(false);
        Panel_5.setVisible(false);
        Panel_6.setVisible(false);
        tab1.setBackground(Color.black);
        tab2.setBackground(new Color(38, 166, 154));
        tab3.setBackground(new Color(38, 166, 154));
        tab4.setBackground(new Color(38, 166, 154));
        tab5.setBackground(new Color(38, 166, 154));
        tab6.setBackground(new Color(38, 166, 154));
    }//GEN-LAST:event_tab1MouseClicked

    private void tab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseClicked
        Panel_1.setVisible(false);
        Panel_2.setVisible(true);
        Panel_3.setVisible(false);
        Panel_4.setVisible(false);
        Panel_5.setVisible(false);
        Panel_6.setVisible(false);
        tab2.setBackground(Color.black);
        tab1.setBackground(new Color(38, 166, 154));
        tab3.setBackground(new Color(38, 166, 154));
        tab4.setBackground(new Color(38, 166, 154));
        tab5.setBackground(new Color(38, 166, 154));
        tab6.setBackground(new Color(38, 166, 154));

    }//GEN-LAST:event_tab2MouseClicked

    private void tab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseClicked
        Panel_1.setVisible(false);
        Panel_2.setVisible(false);
        Panel_3.setVisible(true);
        Panel_4.setVisible(false);
        Panel_5.setVisible(false);
        Panel_6.setVisible(false);
        tab3.setBackground(Color.black);
        tab1.setBackground(new Color(38, 166, 154));
        tab2.setBackground(new Color(38, 166, 154));
        tab4.setBackground(new Color(38, 166, 154));
        tab5.setBackground(new Color(38, 166, 154));
        tab6.setBackground(new Color(38, 166, 154));
    }//GEN-LAST:event_tab3MouseClicked

    private void Label_SalidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_SalidaMouseClicked
        System.exit(0); // Salida del programa
    }//GEN-LAST:event_Label_SalidaMouseClicked

    private void Label_SalidaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_SalidaMouseEntered
        BtnSalida.setBackground(Color.red);// Coloca el color rojo al seleccionarlo
        Label_Salida.setForeground(Color.white);
    }//GEN-LAST:event_Label_SalidaMouseEntered

    private void Label_SalidaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_SalidaMouseExited
        BtnSalida.setBackground(new Color(38, 166, 154));// Devuelve el color del background
        Label_Salida.setForeground(Color.black);
    }//GEN-LAST:event_Label_SalidaMouseExited

    private void PnlMenuMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PnlMenuMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse); // Direccion del eje X y eje Y del mouse
    }//GEN-LAST:event_PnlMenuMouseDragged

    private void PnlMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PnlMenuMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_PnlMenuMousePressed

    private void tab4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab4MouseClicked
        Panel_1.setVisible(false);
        Panel_2.setVisible(false);
        Panel_3.setVisible(false);
        Panel_4.setVisible(true);
        Panel_5.setVisible(false);
        Panel_6.setVisible(false);
        tab4.setBackground(Color.black);
        tab1.setBackground(new Color(38, 166, 154));
        tab2.setBackground(new Color(38, 166, 154));
        tab3.setBackground(new Color(38, 166, 154));
        tab5.setBackground(new Color(38, 166, 154));
        tab6.setBackground(new Color(38, 166, 154));
    }//GEN-LAST:event_tab4MouseClicked

    private void tab5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab5MouseClicked
        Panel_1.setVisible(false);
        Panel_2.setVisible(false);
        Panel_3.setVisible(false);
        Panel_4.setVisible(false);
        Panel_5.setVisible(true);
        Panel_6.setVisible(false);
        tab5.setBackground(Color.black);
        tab1.setBackground(new Color(38, 166, 154));
        tab2.setBackground(new Color(38, 166, 154));
        tab4.setBackground(new Color(38, 166, 154));
        tab3.setBackground(new Color(38, 166, 154));
        tab6.setBackground(new Color(38, 166, 154));
    }//GEN-LAST:event_tab5MouseClicked

    private void tab6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab6MouseClicked
        Panel_1.setVisible(false);
        Panel_2.setVisible(false);
        Panel_3.setVisible(false);
        Panel_4.setVisible(false);
        Panel_5.setVisible(false);
        Panel_6.setVisible(true);
        tab6.setBackground(Color.black);
        tab1.setBackground(new Color(38, 166, 154));
        tab2.setBackground(new Color(38, 166, 154));
        tab4.setBackground(new Color(38, 166, 154));
        tab5.setBackground(new Color(38, 166, 154));
        tab3.setBackground(new Color(38, 166, 154));
    }//GEN-LAST:event_tab6MouseClicked

    private void Cargar_ArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cargar_ArbolActionPerformed
    // Abrir un cuadro de diálogo para seleccionar el archivo
    // Configuración del JFileChooser
    JFileChooser chooser = new JFileChooser();
    chooser.setDialogTitle("Selecciona un archivo JSON");
    chooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos JSON", "json"));

    int seleccion = chooser.showOpenDialog(this);

    if (seleccion == JFileChooser.APPROVE_OPTION) {
        File file = chooser.getSelectedFile();

        if (file != null && file.getName().endsWith(".json")) {
            try {
                // Leer contenido del archivo JSON
                String contenido = new String(Files.readAllBytes(file.toPath()));

                // Crear el árbol si no existe
                if (tree == null) {
                    tree = new Tree();
                }

                // Llamar a un método auxiliar para procesar el JSON
                boolean exito = cargarArbolDesdeJson(contenido, tree);

                if (exito) {
                    // Mostrar mensaje de éxito
                    JOptionPane.showMessageDialog(this, "Archivo cargado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error al procesar el archivo: datos incompletos o inválidos.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al procesar el archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un archivo JSON válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    }//GEN-LAST:event_Cargar_ArbolActionPerformed

    private void Cargar_ArbolMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cargar_ArbolMouseExited
        Cargar_Arbol.setBackground(new Color(38, 166, 154));
        Cargar_Arbol.setForeground(Color.white);
    }//GEN-LAST:event_Cargar_ArbolMouseExited

    private void Cargar_ArbolMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cargar_ArbolMouseEntered
        Cargar_Arbol.setBackground(Color.black);
        Cargar_Arbol.setForeground(Color.white);
    }//GEN-LAST:event_Cargar_ArbolMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Tree tree = new Tree();
        java.awt.EventQueue.invokeLater (() -> {
            new Interfaz().setVisible(true);
        });
    }

    private void pintarImagen(JLabel lb1, String ruta) {
        this.imagen = new ImageIcon(ruta);
        this.icono = new ImageIcon(
                this.imagen.getImage().getScaledInstance(
                        lb1.getWidth(),
                        lb1.getHeight(),
                        Image.SCALE_DEFAULT
                )
        );
        lb1.setIcon(this.icono);
        this.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BarraAbajo;
    private javax.swing.JPanel BarraArriba;
    private javax.swing.JPanel BtnSalida;
    private javax.swing.JButton Cargar_Arbol;
    private javax.swing.JLabel Img_1;
    private javax.swing.JLabel Img_2;
    private javax.swing.JLabel Img_3;
    private javax.swing.JLabel Img_4;
    private javax.swing.JLabel Label_Salida;
    private javax.swing.JPanel Panel_1;
    private javax.swing.JPanel Panel_2;
    private javax.swing.JPanel Panel_3;
    private javax.swing.JPanel Panel_4;
    private javax.swing.JPanel Panel_5;
    private javax.swing.JPanel Panel_6;
    private javax.swing.JPanel PnlFondo;
    private javax.swing.JPanel PnlMenu;
    private javax.swing.JLabel TexAbout;
    private javax.swing.JLabel TexAbout1;
    private javax.swing.JLabel TexAbout2;
    private javax.swing.JLabel TexAbout3;
    private javax.swing.JLabel TexHome;
    private javax.swing.JLabel TexService;
    private javax.swing.JLabel TextoTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab3;
    private javax.swing.JPanel tab4;
    private javax.swing.JPanel tab5;
    private javax.swing.JPanel tab6;
    // End of variables declaration//GEN-END:variables
}
